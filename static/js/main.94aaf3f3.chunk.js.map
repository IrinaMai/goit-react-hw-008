{"version":3,"sources":["components/contactList/ContactList.module.css","components/phoneBookForm/PhoneBookForm.module.css","components/contactList/fadeStyle.module.css","components/phoneBookForm/fade.module.css","redux/actions/phoneBookAction.js","redux/reducers/phonebookReducer.js","redux/store.js","redux/selectors/phBookSelectors.js","components/contactList/ContactList.js","redux/operations/phBookOperation.js","components/phoneBookForm/PhoneBookForm.js","components/App.js","index.js"],"names":["module","exports","filterHndl","createAction","filterClear","loading","addContactSuccess","contact","payload","getContactSuccess","deleteContactSuccess","setError","phBookReducer","createReducer","contactList","filter","isLoading","error","state","action","item","id","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","middleware","getConctactList","getIsLoading","getError","filteredList","createSelector","fil","name","toLowerCase","includes","ContactList","useSelector","myList","dispatch","useDispatch","useEffect","length","onDeletBtn","e","target","axios","delete","process","then","catch","setTimeout","finally","className","label","type","onChange","value","input","title","color","height","width","loader","TransitionGroup","component","list","map","phone","CSSTransition","timeout","classNames","fadeStyle","listItem","nameItem","onClick","button","initialState","message","PhoneBookForm","useState","setContact","onInputChng","prev","in","unmountOnExit","fadeStyled","alert","alertMessage","onSubmit","preventDefault","find","post","response","data","addContactToDB","App","get","Object","keys","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94aaf3f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__1xOzx\",\"label\":\"ContactList_label__3fAXA\",\"input\":\"ContactList_input__35ug1\",\"button\":\"ContactList_button__o4f97\",\"list\":\"ContactList_list__bG_6i\",\"listItem\":\"ContactList_listItem__22BVO\",\"nameItem\":\"ContactList_nameItem__2aKos\",\"loader\":\"ContactList_loader__1aFjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhoneBookForm_title__2gET7\",\"label\":\"PhoneBookForm_label__2bihM\",\"input\":\"PhoneBookForm_input___77zt\",\"button\":\"PhoneBookForm_button__1WmKK\",\"alert\":\"PhoneBookForm_alert__3VbBy\",\"alertMessage\":\"PhoneBookForm_alertMessage__1OmMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeStyle_appear__2XvB4\",\"appearActive\":\"fadeStyle_appearActive__3EVX0\",\"enter\":\"fadeStyle_enter__3Yr6t\",\"enterActive\":\"fadeStyle_enterActive__F52oh\",\"exit\":\"fadeStyle_exit__2KuyH\",\"exitActive\":\"fadeStyle_exitActive__tcLY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__2ltl5\",\"enterActive\":\"fade_enterActive__2P9kW\",\"exit\":\"fade_exit__2SaQ6\",\"exitActive\":\"fade_exitActive__2GkFY\",\"error\":\"fade_error__3Car4\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterHndl = createAction('@phoneBook/addFilter');\r\nconst filterClear = createAction('@phoneBook/clearFilter');\r\nconst loading = createAction('@phoneBook/loading');\r\nconst addContactSuccess = createAction(\r\n  '@phoneBook/addContactSuccess',\r\n  contact => ({\r\n    payload: { ...contact },\r\n  }),\r\n);\r\nconst getContactSuccess = createAction('@phoneBook/getContactSuccess');\r\nconst deleteContactSuccess = createAction('@phoneBook/deleteContactSuccess');\r\nconst setError = createAction('@phoneBook/setError');\r\n\r\nexport {\r\n  loading,\r\n  filterHndl,\r\n  filterClear,\r\n  addContactSuccess,\r\n  getContactSuccess,\r\n  deleteContactSuccess,\r\n  setError,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  loading,\r\n  addContactSuccess,\r\n  filterHndl,\r\n  filterClear,\r\n  getContactSuccess,\r\n  deleteContactSuccess,\r\n  setError,\r\n} from '../actions/phoneBookAction';\r\n\r\nconst initialState = {\r\n  contactList: [],\r\n  filter: '',\r\n  isLoading: false,\r\n  error: '',\r\n};\r\n\r\nexport const phBookReducer = createReducer(\r\n  { ...initialState },\r\n  {\r\n    [loading]: state => ({\r\n      ...state,\r\n      isLoading: !state.isLoading,\r\n    }),\r\n\r\n    [addContactSuccess]: (state, action) => ({\r\n      ...state,\r\n      contactList: [...state.contactList, action.payload],\r\n    }),\r\n    [getContactSuccess]: (state, action) => ({\r\n      ...state,\r\n      contactList: [...action.payload],\r\n    }),\r\n\r\n    [filterHndl]: (state, action) => ({ ...state, filter: action.payload }),\r\n    [filterClear]: (state, action) => ({ ...state, filter: '' }),\r\n    [deleteContactSuccess]: (state, action) => ({\r\n      ...state,\r\n      contactList: [\r\n        ...state.contactList.filter(item => item.id !== action.payload),\r\n      ],\r\n    }),\r\n    [setError]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { phBookReducer } from './reducers/phonebookReducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: phBookReducer,\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getConctactList = state => state.contactList;\r\nconst getFilter = state => state.filter;\r\nconst getIsLoading = state => state.isLoading;\r\nconst getError = state => state.error;\r\n\r\nconst getTtlState = state => state;\r\n\r\nconst filteredList = createSelector(\r\n  [getConctactList, getFilter],\r\n  (contactList, fil) => {\r\n    return contactList.filter(item =>\r\n      item.name.toLowerCase().includes(fil.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport {\r\n  getConctactList,\r\n  getFilter,\r\n  getIsLoading,\r\n  getError,\r\n  getTtlState,\r\n  filteredList,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { filterClear, filterHndl } from '../../redux/actions/phoneBookAction';\r\nimport Loader from 'react-loader-spinner';\r\nimport { deleteContactById } from '../../redux/operations/phBookOperation';\r\nimport {\r\n  filteredList,\r\n  getConctactList,\r\n  getIsLoading,\r\n} from '../../redux/selectors/phBookSelectors';\r\nimport {\r\n  title,\r\n  input,\r\n  label,\r\n  button,\r\n  list,\r\n  listItem,\r\n  nameItem,\r\n  filter,\r\n  loader,\r\n} from './ContactList.module.css';\r\nimport fadeStyle from './fadeStyle.module.css';\r\n\r\nconst ContactList = () => {\r\n  const isLoading = useSelector(getIsLoading);\r\n  const myList = useSelector(filteredList);\r\n  const contactList = useSelector(getConctactList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterClear());\r\n  }, [contactList.length <= 2]);\r\n\r\n  const onFilterChng = e => {\r\n    dispatch(filterHndl(e.target.value));\r\n  };\r\n\r\n  const onDeletBtn = e => {\r\n    dispatch(deleteContactById(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contactList.length > 2 && (\r\n        <label className={label}>\r\n          Search name:\r\n          <input\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={onFilterChng}\r\n            className={input}\r\n            value={filter}\r\n          />\r\n        </label>\r\n      )}\r\n\r\n      <h2 className={title}>Contact list </h2>\r\n      {isLoading && (\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#6699FF\"\r\n          height={30}\r\n          width={30}\r\n          className={loader}\r\n        />\r\n      )}\r\n      <TransitionGroup component=\"ul\" className={list}>\r\n        {myList.map(({ id, name, phone }) => (\r\n          <CSSTransition timeout={250} classNames={fadeStyle} key={id}>\r\n            <li className={listItem}>\r\n              <span className={nameItem}>{name} :</span>\r\n              {phone}\r\n              <button\r\n                type=\"button\"\r\n                onClick={onDeletBtn}\r\n                id={id}\r\n                className={button}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import axios from 'axios';\r\nimport {\r\n  loading,\r\n  addContactSuccess,\r\n  getContactSuccess,\r\n  deleteContactSuccess,\r\n  setError,\r\n} from '../actions/phoneBookAction';\r\n\r\nconst addContactToDB = contact => dispatch => {\r\n  dispatch(loading());\r\n\r\n  axios\r\n    .post(`${process.env.REACT_APP_BASE_URL}contacts.json`, contact)\r\n    .then(response => {\r\n      dispatch(addContactSuccess({ ...contact, id: response.data.name }));\r\n    })\r\n    .catch(error => dispatch(setError('ooops samthing going wrong')))\r\n    .then(\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500),\r\n    )\r\n    .finally(() => dispatch(loading()));\r\n};\r\n\r\nconst getContactsFromDB = () => dispatch => {\r\n  dispatch(loading());\r\n  axios\r\n    .get(`${process.env.REACT_APP_BASE_URL}contacts.json`)\r\n    .then(response => {\r\n      dispatch(\r\n        getContactSuccess(\r\n          Object.keys(response.data).map(item => ({\r\n            ...response.data[item],\r\n            id: item,\r\n          })),\r\n        ),\r\n      );\r\n    })\r\n    .catch(error => dispatch(setError('No one contact')))\r\n    .then(\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500),\r\n    )\r\n    .finally(() => dispatch(loading()));\r\n};\r\n\r\nconst deleteContactById = id => dispatch => {\r\n  dispatch(loading());\r\n\r\n  axios\r\n    .delete(`${process.env.REACT_APP_BASE_URL}contacts/${id}.json`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(setError('ooops samthing going wrong')))\r\n    .then(\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500),\r\n    )\r\n    .finally(() => dispatch(loading()));\r\n};\r\n\r\nexport { addContactToDB, getContactsFromDB, deleteContactById };\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { addContactToDB } from '../../redux/operations/phBookOperation';\r\nimport {\r\n  getConctactList,\r\n  getError,\r\n} from '../../redux/selectors/phBookSelectors';\r\nimport { setError } from '../../redux/actions/phoneBookAction';\r\nimport {\r\n  title,\r\n  button,\r\n  input,\r\n  label,\r\n  alert,\r\n  alertMessage,\r\n} from './PhoneBookForm.module.css';\r\nimport fadeStyled from './fade.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  phone: '',\r\n  message: '',\r\n};\r\n\r\nconst PhoneBookForm = () => {\r\n  const [contact, setContact] = useState({ ...initialState });\r\n  const contactList = useSelector(getConctactList);\r\n  const error = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n  const onContactSubmit = e => {\r\n    e.preventDefault();\r\n    if (!contact.name || !contact.phone) {\r\n      dispatch(setError('All fields should be complited'));\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500);\r\n      return;\r\n    }\r\n    if (\r\n      contactList.find(\r\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      dispatch(setError('This name already exist'));\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500);\r\n      return;\r\n    }\r\n    if (contactList.find(({ phone }) => phone == contact.phone)) {\r\n      dispatch(setError('This phone belongs another contact'));\r\n      setTimeout(() => {\r\n        dispatch(setError(''));\r\n      }, 1500);\r\n      return;\r\n    }\r\n    dispatch(addContactToDB(contact));\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  const onInputChng = e => {\r\n    const { name, value } = e.target;\r\n    setContact(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className={title}>Phonebook</h2>\r\n\r\n      <CSSTransition\r\n        in={error.length > 0}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={fadeStyled}\r\n      >\r\n        <div className={alert}>\r\n          <p className={alertMessage}>{error}</p>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      <form onSubmit={onContactSubmit}>\r\n        <label className={label}>\r\n          Name:\r\n          <input\r\n            name=\"name\"\r\n            value={contact.name}\r\n            onChange={onInputChng}\r\n            className={input}\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number:\r\n          <input\r\n            name=\"phone\"\r\n            value={contact.phone}\r\n            onChange={onInputChng}\r\n            className={input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhoneBookForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getContactsFromDB } from '../redux/operations/phBookOperation';\r\nimport ContactList from './contactList/ContactList';\r\nimport PhoneBookForm from './phoneBookForm/PhoneBookForm';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsFromDB());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <PhoneBookForm />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <BrowserRouter>\r\n    <App/>\r\n    </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}